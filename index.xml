<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Corwin Brown</title><link>https://blakfeld.github.io/</link><description>Recent content on Corwin Brown</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 31 May 2021 15:23:41 -0500</lastBuildDate><atom:link href="https://blakfeld.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Union-Find</title><link>https://blakfeld.github.io/posts/union-find/</link><pubDate>Mon, 31 May 2021 15:23:41 -0500</pubDate><guid>https://blakfeld.github.io/posts/union-find/</guid><description>Union-Find answers the question &amp;ldquo;Are two nodes in the same group?&amp;rdquo; so if we have something like A-&amp;gt;B-&amp;gt;C-&amp;gt;D it&amp;rsquo;s a way to ask &amp;ldquo;Is D connected to A&amp;rdquo;.
Typically, a Union-Find instance itself does not store the objects in question themselves. Usually, each object is associated with a number from 0 to N, and that data is used by Union-Find.
The API for Union-Find usually looks something like:
union(int p, int q) -&amp;gt; int Links node p to node q.</description></item></channel></rss>